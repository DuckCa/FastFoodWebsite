//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FF_Fastfood.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class FF_FastFoodEntities : DbContext
    {
        public FF_FastFoodEntities()
            : base("name=FF_FastFoodEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Cart>()
                .HasMany(c => c.Cart_Items)
                .WithRequired(ci => ci.Cart)
                .HasForeignKey(ci => ci.cart_id);

            modelBuilder.Entity<Cart_Items>()
                .HasRequired(ci => ci.Food)
                .WithMany(f => f.Cart_Items)
                .HasForeignKey(ci => ci.food_id);

            modelBuilder.Entity<Customer>()
                .HasMany(c => c.Carts)
                .WithRequired(c => c.Customer)
                .HasForeignKey(c => c.customer_id);

            base.OnModelCreating(modelBuilder);
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Deliverer> Deliverers { get; set; }
        public virtual DbSet<Delivery> Deliveries { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Food> Foods { get; set; }
        public virtual DbSet<Order_Items> Order_Items { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<Cart_Items> Cart_Items { get; set; }
<<<<<<< Updated upstream
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
=======
        public virtual DbSet<Banner> Banners { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
>>>>>>> Stashed changes
    }
}
